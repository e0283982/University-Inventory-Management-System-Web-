@*--------------------------------
    Author: Ong Wei Ting
    --------------------------------*@

@{
    Layout = null;
}

@using SA46Team1_Web_ADProj.Models;
@model Item

<link href="@Url.Content("~/Content/common.css")" rel="stylesheet" type="text/css" />

<script>
    var table;
    var list = '@ViewBag.SupplierList';
    var data = list.replace(/&quot;/g, '"');
    var dataJSON = JSON.parse(data);
    var dataKeys = Object.keys(dataJSON);

    $(document).ready(function () {

    $.ajax({
        url: 'http://localhost/lu/api/Restful/GetItemsById/' + '@Session["MaintenanceItemCode"]',
        method: 'get',
        dataType: 'json',
        success: function (data) {
            d = data;

            table = $('#dataTable-store-items-details').DataTable({
                paging: false,
                sort: false,
                searching: false,
                "iDisplayLength": 5,
                "bInfo": false,
                scrollX: 800,
                data: [data],
                columns: [
                    { 'data': 'ItemCode' },
                    {
                        'data': 'Description',
                        "render": function (data, type, full, meta) {
                            return '<input id="input-item-desc" maxlength="255" style="text-align: center;" type="text" value="' + $('<div/>').text(data).html() + '">';
                        }
                    },
                    { 'data': 'CategoryName'},
                    { 'data': 'UoM' },
                    {
                        'data': null,
                        "render": function (data, type, full, meta) {
                            return '<input id="input-reorderlvl" style="text-align: center;" type = "number" step="1" pattern="[0-9]" min = "1" max = "2000" value="' + '@TempData["ReorderLvl"]' + '" />';
                        }
                    },
                     {
                        'data': null,
                         "render": function (data, type, full, meta) {
                             return '<input id="input-reorderqty" style="text-align: center;" type = "number" step ="1" pattern="[0-9]" min = "1" max = "2000" value="' + '@TempData["ReorderQty"]' + '" />';
                        }
                    },
                    {
                        'data': 's1',
                        "render": function (d, t, r) {

                            var $select = $('<select id="select-item-s1"></select>', {
                                "id": r[0] + "start",
                                "value": d
                            });

                            for (i = 0; i < dataKeys.length; i++) {
                                var $option = $("<option></option>", {
                                    "text": dataJSON[dataKeys[i]],
                                    "value": dataKeys[i]
                                });
                                if (d === dataJSON[dataKeys[i]]) {
                                    $option.attr("selected", "selected")
                                }
                                $select.append($option);
                            }

                            return $select.prop("outerHTML");
                        }
                    },
                    {
                        'data': 's2',
                        "render": function (d, t, r) {

                            var $select = $('<select id="select-item-s2"></select>', {
                                "id": r[0] + "start",
                                "value": d
                            });

                            for (i = 0; i < dataKeys.length; i++) {
                                var $option = $("<option></option>", {
                                    "text": dataJSON[dataKeys[i]],
                                    "value": dataKeys[i]
                                });
                                if (d === dataJSON[dataKeys[i]]) {
                                    $option.attr("selected", "selected")
                                }
                                $select.append($option);
                            }

                            return $select.prop("outerHTML");
                        }
                    },
                    {
                        'data': 's3',
                        "render": function (d, t, r) {

                            var $select = $('<select id="select-item-s3"></select>', {
                                "id": r[0] + "start",
                                "value": d
                            });

                            for (i = 0; i < dataKeys.length; i++) {
                                var $option = $("<option></option>", {
                                    "text": dataJSON[dataKeys[i]],
                                    "value": dataKeys[i]
                                });
                                if (d === dataJSON[dataKeys[i]]) {
                                    $option.attr("selected", "selected")
                                }
                                $select.append($option);
                            }

                            return $select.prop("outerHTML");
                        }
                    },
                    {
                        'data': 'Active',
                         render: function (data, type, row) {

                                if ('@TempData["countItemsWithQtyNotZero"].ToString().ToLower()' == "false") {
                                    if (data != 0) {
                                        //active status
                                        //to check for item qty balance (readonly if qty balance >0)
                                        return '<input id="input-item-active" type="checkbox" checked>';
                                    } else {
                                        return '<input id="input-item-active" type="checkbox">';
                                    }
                                } else {
                                    return data != 0 ? 'Active' : 'Inactive';
                                }

                            }                           
                    }
                ],
                columnDefs: [
                    {
                        className: 'text-center', targets: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                ],
            });
        }
        });
    });


    $(function () {
        $("#dialog-submit-edit-item").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });


    $(document).ajaxComplete(function () {
        $('#btn-edit-item').click(function () {
            var dataToSend = "";
            var desc = [];
            var suppliers = [];
            var status = [];
            var reorderlvl = [];
            var reorderqty = [];
            var error = false;
            var validateqty = 0;
            var validatelvl = 0;
            var error2 = false;

            dataToSend = table.rows(0).data();
            for (var i = 0; i < Object.keys(d).length; i++) {

                var rowData = dataToSend[i];
                validateqty = $("#input-reorderqty").val();
                validatelvl = $("#input-reorderlvl").val();
                var s1 = $("#select-item-s1").val();
                var s2 = $("#select-item-s2").val();
                var s3 = $("#select-item-s3").val();
                if (validatelvl > 0 && validatelvl % 1 == 0 && validatelvl <= 2000 && validateqty > 0 && validateqty % 1 == 0 && validateqty <= 2000) {
                    if (s1 == s2 || s2 == s3 || s3 == s1) {
                        error2 = true;
                    } else {
                        itemDesc = $("#input-item-desc").val();
                        reorderlvl = $("#input-reorderlvl").val();
                        reorderqty = $("#input-reorderqty").val();
                        supplier1 = s1;
                        supplier2 = s2;
                        supplier3 = s3;
                            active = $("#input-item-active").prop('checked');

                        desc.push(itemDesc);
                        suppliers.push(supplier1);
                        suppliers.push(supplier2);
                        suppliers.push(supplier3);

                        if (active != null) {
                            status.push(active);
                        }
                    }

                }
                else {
                    error = true;
                }

            }
            if (error == false && error2 == false) {
                $.ajax({
                    type: 'POST',
                    url: '/lu/Store/StoreMaintenance/Items/EditItem',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    async: false,
                    data: JSON.stringify({ suppliers: suppliers, desc: desc, status: status, reorderlvl: reorderlvl, reorderqty: reorderqty })
                });

                $('#parent_page').css({ 'opacity': 0.2, 'pointer-events': 'none' });
                $('#dialog-submit-edit-item').dialog('open');
                table.draw(false); //this line needed, if not upon save, table does not auto display updated data (until next refresh)
                window.location.href = '@Url.Action("Maintenance", "Store")';
            }
            else if (error == true) {
                $('#errormessage').html("<div class=\"alert alert-danger col-md-6\" id=\"errormessage\">" +
                    $("#input-item-desc").val() + ": Qty entered is invalid!" +
                    "</div>");

            }
            else {
                $('#errormessage').html("<div class=\"alert alert-danger col-md-6\" id=\"errormessage\">" +
                    "Suppliers cannot be duplicates!" +
                    "</div>");
                return false;
            }


        });
    });
</script>
<div id="loading" style="font-family: 'Oxygen', sans-serif;">

    <div>
        <h5>Item Code: @Session["MaintenanceItemCode"]</h5>
    </div>
    <form>
        @using (Html.BeginForm("BackToItemsMaintenanceList", "StoreMaintenance", FormMethod.Post))
        {

            <table id="dataTable-store-items-details" class="display" style="width:80%;">
                <thead style="font-size: 10pt;">
                    <tr>
                        <th>Item Code</th>
                        <th>Description</th>
                        <th>Category</th>
                        <th>Unit of Measure</th>
                        <th>Reorder Level</th>
                        <th>Reorder Quantity</th>
                        <th>Supplier 1</th>
                        <th>Supplier 2</th>
                        <th>Supplier 3</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody style="font-size: 10pt;"></tbody>
            </table>

            <hr />

            <div class="row">
                <div class="col-md-6">
                    <div>
                        <span>

                            <input class="btn btn-lu-blue" type="submit" value="Back" style="font-size: 10pt;" />

                        </span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div style="float:right;">
                        <span>
                            <button id="btn-edit-item" class="btn btn-lu-green" style="font-size: 10pt;">Save</button>
                        </span>
                    </div>
                </div>
            </div>
            <br />
            <div id="errormessage" class="col-md-12" />
        }
    </form>

    <div id="dialog-submit-edit-item" class="hidden">
        <br />
        <div style="text-align:center;">
            <h5>Item has been successfully edited.</h5>
        </div>
        <hr />
    </div>

</div>