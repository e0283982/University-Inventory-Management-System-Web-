@{
    Layout = null;
    ReqHistoryModel req = (ReqHistoryModel)Session["CurrentReqHistory"];
    bool editMode = (bool)Session["existingReqEditMode"];
    string dateNow = req.RequestDate.ToShortDateString();
}

@using SA46Team1_Web_ADProj.Models;

<script>
    var table;
    var passData;
    var passIndex;

    $(document).ready(function () {

        if (@editMode.ToString().ToLower()== true) {
            $("#btn-save-req-history").show();
            $("#btn-edit-req-history").hide();
            $("#btn-submit-discard-req-items").show();
        } else {
            $("#btn-save-req-history").hide();
            $("#btn-edit-req-history").show();
            $("#btn-submit-discard-req-items").hide();
        }

        if ('@req.ApprovalStatus' != 'Pending'  || '@req.Status'!='Open') {
            $("#btn-edit-req-history").prop('disabled', true);
        }

        $.ajax({
            url: 'http://localhost:49921/api/Restful/GetRequisitionHistoryDetail/' + '@Session["id"]',
            method: 'get',
            dataType: 'json',
            success: function (data) {
                d = data;

                table = $('#dataTable-pastReq-details').DataTable({
                    paging: true,
                    sort: true,
                    searching: true,
                    "iDisplayLength": 5,
                    scrollY: 200,
                    scrollCollapse: false,
                    data: data,
                    columns: [
                        { 'data': 'Description' },
                        { 'data': 'UoM' },
                        {
                            'data': 'QuantityOrdered',
                            "render": function (data, type, full, meta) {
                                if (@editMode.ToString().ToLower() == true) {
                                    return '<input id="edit-qty-order" type="number" value="' + $('<div/>').text(data).html() + '" min="1">';
                                } else {
                                    return data;
                                }
                            }
                        },
                        { 'data': 'QuantityDelivered' },
                        { 'data': 'QuantityBackOrdered' },
                        {
                            'data': null,
                            "render": function (data, type, full, meta) {
                                //if approval status of req is completed or rejected, then dont show anything here
                                var reqStatus = '@req.Status';
                                var reqApprovalStatus = '@req.ApprovalStatus';

                                if (reqStatus == "Open" && reqApprovalStatus == "Pending") {
                                    return '<span>' +
                                        '<button class="btn btn-lu-red" id="btn-discard-items">' +
                                        '<i class="far fa-trash-alt"></i>' +
                                        '</button>' +
                                        '</span>';
                                } else {
                                    return "";
                                }
                                
                            }
                        },
                    ],
                    drawCallback: function (settings) {

                    }
                });
            }
        });
    });

    $(function () {
        $("#dialog-confirm-discard-req-item").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });


    $(function () {
        $("#dialog-discard-req-item-submitted").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });

    $(function () {
        $("#dialog-discard-req-no-item-submitted").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });

    $(function () {
        $("#dialog-edit-req-zero-input-alert").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });

    $(function () {
        $("#dialog-update-req-items-success").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });

    $(function () {
        $("#dialog-confirm-discard-req-item-error").dialog({
            autoOpen: false,
            width: "40%",
            maxWidth: "40%"
        });
    });

    $('#dataTable-pastReq-details tbody').on('click', '#btn-discard-items', function () {

        var data = table.row($(this).parents('tr')).data();
        var index = table.row($(this).parents('tr')).index();

        passData = data.Description;
        passIndex = index;

        if (table.rows().data().length == 1) {
            $('#dialog-confirm-discard-req-item-error').dialog('open');
        } else {
            $('#dialog-confirm-discard-req-item').dialog('open');
        }
    });
    
     $('#btn-edit-req-history').on('click', function () {
         
        $.ajax({
            url: '/DeptRequisitionHistory/EditExisitingOrderQty',
            type: 'POST',
        });

        table.draw(false);
        window.location.href = '@Url.Action("RequisitionHistory", "Dept")';

    });
    
    $('#btn-confirm-discard-no').on('click', function () {
        $('#dialog-confirm-discard-req-item').dialog('close');
    });

    $('#btn-confirm-discard-yes').click(function () {

        $.ajax({
            url: '/DeptRequisitionHistory/DiscardSelReqItems',
            data: JSON.stringify({ data: passData, index: passIndex }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            type: 'POST',
        });
        
        $('#dialog-confirm-discard-req-item').dialog('close');
        table.draw(false);
        $('#dialog-discard-req-item-submitted').dialog('open');

        window.location.href = '@Url.Action("RequisitionHistory", "Dept")';

    });

    $('#btn-save-req-history').on('click', function () {

        var data = table.column(2).data();
        var dataToSend = "";
        var arr = [];
        var arr1 = []
        for (var i = 0; i < table.rows().data().length; i++) {
            var newOrderQty = table.cell(i, 2).nodes().to$().find('input').val();
            dataToSend = table.rows(i).data();
            arr1.push(newOrderQty);
            arr.push(dataToSend[0]);

            if (newOrderQty == "0") {
                editMode = false;
                $("#dialog-edit-req-zero-input-alert").dialog('open');
                return;
            }
        }

        //toggle save/edit btn visibility
        $("#btn-save-req-history").hide();
        $("#btn-edit-req-history").show();

        $.ajax({
            url: '/DeptRequisitionHistory/ExitEditExistingOrderQty',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({ arr: arr, arr1: arr1 }),
            success: function () {

                alert('success');
            }
        });

        $("#dialog-update-req-items-success").dialog('open');
        editMode = false;
        table.draw(false);

        window.location.href = '@Url.Action("RequisitionHistory", "Dept")';

    });

    $('#btn-confirm-withdrawal-no').on('click', function () {
        $('#dialog-confirm-discard-req-item-error').dialog('close');
    });

    $('#btn-confirm-withdrawal-yes').click(function () {

        $.ajax({
            url: '/DeptRequisitionHistory/DiscardSelReqItems',
            data: JSON.stringify({ data: passData, index: passIndex }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            type: 'POST',
        });

        $('#dialog-confirm-discard-req-item').dialog('close');
        table.draw(false);
        $('#dialog-discard-req-item-submitted').dialog('open');

       window.location.href = '@Url.Action("RequisitionHistory", "Dept")';

    });

    $('#dataTable-pastReq-details tbody').on('change', '#edit-qty-order', function () {
        var data = table.row($(this).parents('tr')).data();
        var index = table.row($(this).parents('tr')).index();

        var qty = table.cell(index, 2).nodes().to$().find('input').val();
        if (qty <= 0) {
            alert("Order quantity cannot be <1.");
            table.cell(index, 2).nodes().to$().find('input').val(1);
            return;
        } else if (qty % 1 != 0) {
            alert("Order quantity must be whole number.");
            table.cell(index, 2).nodes().to$().find('input').val(1);
            return;
        }

        table.draw(false);

    });
</script>

<div class="row">
    <div class="col-md-6">
        <h5>Requisition Form # @Session["id"]</h5>
    </div>
</div>

<br />

<table id="dataTable-pastReq-details" class="display" style="width:80%;">
    <thead style="font-size: 10pt;">
        <tr>
            <th>Item Description</th>
            <th>Unit of Measure</th>
            <th>Requested Qty</th>
            <th>Delivered Qty</th>
            <th>Back Order Qty</th>
            <th></th>
        </tr>
    </thead>

    <tbody style="font-size: 10pt;">
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </tbody>
</table>

<hr />
<div class="row">
    <div class="col-md-3">      
        <div>
            <label style="font-size: 10pt;">Request Date:&nbsp;</label><label style="font-size: 10pt;">@dateNow</label>
        </div>

        <div>
            <label style="font-size: 10pt;">Representative:&nbsp;</label><label style="font-size: 10pt;">@req.RepName</label>
        </div>

        <div>
            <label style="font-size: 10pt;">Delivery Status:&nbsp;</label><label style="font-size: 10pt;">@req.Status</label>
        </div>
    </div> 
    <div class="col-md-3">
        <div>
            <label style="font-size: 10pt;">Approval Status:&nbsp;</label><label style="font-size: 10pt;">@req.ApprovalStatus</label>
        </div>
        <div>
            <label style="font-size: 10pt;">Approved By:&nbsp;</label><label style="font-size: 10pt;">@req.ApproverName</label>
        </div>
    </div>
    <div class="col-md-6">
        <div style="float:right;">
            <button id="btn-edit-req-history" class="btn btn-lu-blue" type="submit" style="font-size: 10pt;">Edit</button>
            @*<button id="btn-submit-discard-req-items" class="btn btn-lu-red" type="submit" style="font-size: 10pt;">Discard</button>*@
            <button id="btn-save-req-history" class="btn btn-lu-green" type="submit" style="font-size: 10pt;">Save</button>
            @Html.ActionLink("Back", "RequisitionHistory", "Dept", null, new { @class = "btn btn-info", style = "font-size: 10pt; color: #f4f4f4;" })
        </div>       
    </div>
</div>

<div id="dialog-edit-req-zero-input-alert" class="hidden" title="New Order Qty cannot be 0 (Edit Requisition)">
    <h5>Requisition order qty cannot be 0.</h5>
</div>

<div id="dialog-confirm-discard-req-item" class="hidden" title="Confirm Discard Selected (Edit Requisition)">
    <h5>Are you sure you want to cancel the selected request item?</h5>
    <span>
        <button class="btn btn-lu-blue" id="btn-confirm-discard-no">No</button>
    </span>
    <span>
        <button class="btn btn-lu-red" id="btn-confirm-discard-yes">Yes</button>
    </span>
</div>


<div id="dialog-update-req-items-success" class="hidden" title="Request Item(s) updated (Edit Requisition)">
    <h5>Requisition request has been saved.</h5>
</div>

<div id="dialog-discard-req-item-submitted" class="hidden" title="Item(s) Removed (Edit Requisition)">
    <h5>Selected request item(s) have been removed.</h5>
</div>

<div id="dialog-discard-req-no-item-submitted" class="hidden" title="No Item Selected (Edit Requisition)">
    <h5>No request item is selected for removal.</h5>
</div>

<div id="dialog-confirm-discard-req-item-error" class="hidden" title="Request Withdrawal warning (Edit Requisition)">
    <h5>Are you sure you want to withdraw this request?</h5>
    <span>
        <button class="btn btn-lu-blue" id="btn-confirm-withdrawal-no">No</button>
    </span>

    <span>
        <button class="btn btn-lu-red" id="btn-confirm-withdrawal-yes">Yes</button>
    </span>
</div>

