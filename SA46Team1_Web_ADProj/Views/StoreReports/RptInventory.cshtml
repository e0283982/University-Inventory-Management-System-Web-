@*--------------------------------
    Author: Ong Wei Ting
    --------------------------------*@

@{
    Layout = null;
}

@{
    ViewBag.Title = "Inventory Valuation Report";
}

<div id="loading" style="font-family: 'Oxygen', sans-serif;">

    <div>
        <div class="row">
            <div class="col-md-6">
                <h5>Inventory Valuation Report</h5>
            </div>
            <div class="col-md-6">
                <div style="float:right">
                    <br />
                    <label id="lbl-cost-info" style="font-size: 10pt; font-weight: bold;"></label>
                </div>
            </div>
        </div>

        <span>
            <label>Filter by:</label>
            <select id="chosenToggle">
                <option value="all">All</option>
                <option value="item">Item</option>
                <option value="category">Category</option>
            </select>
        </span>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div>
                <label style="font-size: 10pt;">Item Description: </label>
                @Html.DropDownList("SelectItemDesc", ViewBag.ItemsList as SelectList, new { @class = "form-control", multiple = "multiple", size = "5", id = "selectItemDesc" })
            </div>
        </div>
        <div class="col-md-6">
            <div>
                <label style="font-size: 10pt;">Category: </label>
                @Html.DropDownList("SelectCategory", ViewBag.CategoryList as SelectList, new { @class = "form-control", multiple = "multiple", size = "5", id = "selectCategory" })
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-md-12">
            <div style="float:right;">
                <span>
                    <input class="btn btn-lu-green" id="btn-submit-filter" type="submit" style="font-size: 10pt;" />
                </span>

                <span id="btn-submit-export">
                    @Html.ActionLink("Export to PDF", "ExportRptInventory", "StoreReports", null, new { @class = "btn btn-lu-blue", @id = "btn-export-pdf", style = "font-size: 10pt; color:#f4f4f4;" })
                </span>
            </div>
        </div>
    </div>

    <hr />

    <table id="dataTable-storeInventoryVal" class="table">
        <thead style="font-size: 10pt;">
            <tr>
                <th>Category</th>
                <th>Item Code</th>
                <th>Description</th>
                <th>Unit of Measure</th>
                <th>Quantity</th>
                <th>Avg Unit Cost ($)</th>
                <th>Total Cost ($)</th>
            </tr>
        </thead>
        <tbody style="font-size: 10pt;"></tbody>
    </table>
</div>

<div id="dialog-no-data" class="hidden">
    <br />
    <div style="text-align:center;">
        <h5>No data found.</h5>
    </div>
    <span>
        <button class="btn btn-lu-blue" id="btn-dialog-no-data-ok" style="margin-left:40%;">ok</button>
    </span>
    <hr />
</div>

<script>
    var table;
    var searchItems = [];
    var searchCategories = [];
    var initialSum;

    $(document).ready(function () {
        $("#selectCategory").prop('disabled', true);
        $("#selectItemDesc").prop('disabled', true);

        $.ajax({
            url: 'http://localhost/lu/api/Restful/GetRptInventory',
            method: 'get',
            dataType: 'json',
            success: function (data) {
                d = data;

                table = $('#dataTable-storeInventoryVal').DataTable({
                    paging: true,
                    sort: true,
                    search: false,
                    dom: 'lrtip',
                    "iDisplayLength": 4,
                    data: data,
                    columns: [
                        { 'data': 'CategoryName' },
                        { 'data': 'ItemCode' },
                        { 'data': 'Description' },
                        { 'data': 'UoM' },
                        { 'data': 'Quantity' },
                        {
                            'data': 'AvgUnitCost',
                            'render': function (data, type, row) {
                                return parseFloat(Math.round(data * 100) / 100).toFixed(2);;
                            }
                        },
                        {
                            'data': 'TotalCost',
                            'render': function (data, type, row) {
                                return parseFloat(Math.round(data * 100) / 100).toFixed(2);;
                            }
                        }
                    ],
                    "initComplete": function (settings, json) {
                        //reset datatable results

                        initialSum = 0;
                        for (var i = 0; i < $('#dataTable-storeInventoryVal').DataTable().rows().data().length; i++) {
                            var rowData = data[i].TotalCost;
                            initialSum += rowData;
                        }

                        initialSum = parseFloat(initialSum).toFixed(2);

                        $("#lbl-cost-info").text("Total cost ($): " + addCommas(initialSum));
                    },
                    drawCallback: function (settings) {

                        $('#btn-submit-filter').on('click', function () {
                            //check if 'all'
                            var filter = $('#chosenToggle').val();

                            table
                                .search('')
                                .columns().search('')
                                .draw();


                            searchItems = [];
                            searchCategories = [];

                            $('#selectItemDesc option:selected').each(function () {
                                searchItems.push($(this).val());
                            });

                            $('#selectCategory option:selected').each(function () {
                                searchCategories.push($(this).text());
                            });

                            searchItems = searchItems.join('|');
                            searchCategories = searchCategories.join('|');

                            if (searchCategories.length > 0) {
                                table
                                    .columns(0)
                                    .search(searchCategories, true, false, true).draw();
                            } else if (searchItems.length > 0) {
                                table
                                    .columns(1)
                                    .search(searchItems, true, false, true).draw();
                            } else {
                                table
                                    .search('')
                                    .columns().search('')
                                    .draw();
                                $("#lbl-cost-info").text("Total cost ($): " + addCommas(initialSum));

                                return;
                            }

                            var data = table.rows({ filter: 'applied' }).data();

                            var arr = [];
                            for (var i = 0; i < table.rows({ filter: 'applied' }).data().length; i++) {
                                var rowData = data[i];

                                arr.push(JSON.stringify(rowData));
                            }

                            if (arr.length == 0) {
                                $('#dialog-no-data').dialog('open');
                                $('#btn-submit-export').css("pointer-events", "none");
                                return;
                            }

                            $.ajax({
                                url: '/lu/StoreReports/ExportRptInventory2',
                                data: JSON.stringify({ arr: arr }),
                                dataType: "json",
                                contentType: 'application/json; charset=utf-8',
                                type: 'POST',
                                async: false
                            });

                            table.draw(false);

                            var sum = 0;
                            for (var i = 0; i < table.rows({ filter: 'applied' }).data().length; i++) {
                                var rowData = data[i].TotalCost;
                                sum += rowData;
                            }

                            //alert(sum);
                            $("#lbl-cost-info").text("Total cost ($): " + addCommas(sum.toFixed(2)));

                        });

                    },
                });
            }
        });
    });

    //Format currency with commas on every thousandth place
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
    
    $(function () {
        $("#dialog-no-data").dialog({
            autoOpen: false
        });
    });

    $('#btn-dialog-no-data-ok').on('click', function () {
        $('#dialog-no-data').dialog('close');
    });

    $('#chosenToggle').on('change', function (e) {
        var optionSelected = $("option:selected", this);
        var valueSelected = this.value;

        if (valueSelected == "item") {
            $("#selectCategory").val([]);
            $("#selectCategory").prop('disabled', true);
            $("#selectItemDesc").prop('disabled', false);
            //check if no item selected, then disable export btn
            if (searchItems.length == 0) {
                $('#btn-submit-export').css("pointer-events", "none");
            }
            $("#lbl-cost-info").text("");

        } else if (valueSelected == "category") {
            $("#selectItemDesc").val([]);
            $("#selectItemDesc").prop('disabled', true);
            $("#selectCategory").prop('disabled', false);
            if (searchCategories.length == 0) {
                $('#btn-submit-export').css("pointer-events", "none");
            }
            $("#lbl-cost-info").text("");

        } else {
            //clear filter on table
            table
                .search('')
                .columns().search('')
                .draw();

            $("#selectCategory").val([]);
            $("#selectItemDesc").val([]);
            $("#selectItemDesc").prop('disabled', true);
            $("#selectCategory").prop('disabled', true);
            $('#btn-submit-export').css("pointer-events", "auto");
            $("#lbl-cost-info").text("Total cost ($): " + addCommas(initialSum));
        }

    });

    $('#selectItemDesc').on('change', function (e) {
        $('#btn-submit-export').css("pointer-events", "auto");
    });

    $('#selectCategory').on('change', function (e) {
        $('#btn-submit-export').css("pointer-events", "auto");
    });
</script>