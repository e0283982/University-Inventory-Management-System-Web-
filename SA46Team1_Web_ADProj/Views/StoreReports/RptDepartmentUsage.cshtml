@*--------------------------------
    Author: Ong Wei Ting
    --------------------------------*@

@{
    Layout = null;
}

@{
    ViewBag.Title = "Department Usage Cost Report"; //for store
}
<div id="loading" style="font-family: 'Oxygen', sans-serif;">

    <div>
        <h5>Department Usage Cost Report</h5>
    </div>

    <div class="row">
        <div class="col-md-3">
            <div>
                <label style="font-size: 10pt;">Department: </label>
                @Html.DropDownList("SelectDepartmentDesc", ViewBag.DepartmentList as SelectList)
            </div>
            <div>
                <label style="font-size: 10pt;">Category: </label>
                @Html.DropDownList("SelectCategory", ViewBag.CategoryList as SelectList)
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-2">
                    <div style="text-align:center;">
                        <label style="font-size: 10pt;">Year</label>
                    </div>
                    <div>
                        <select id="chosenYear" multiple>
                            <option value="2017">2017</option>
                            <option value="2018">2018</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div style="text-align:center;">
                        <label style="font-size: 10pt;">Month(s)</label>
                    </div>
                    <div>
                        <select id="chosenMonths" multiple>
                            <option value="jan">Jan</option>
                            <option value="feb">Feb</option>
                            <option value="mar">Mar</option>
                            <option value="apr">Apr</option>
                            <option value="may">May</option>
                            <option value="jun">Jun</option>
                            <option value="jul">Jul</option>
                            <option value="aug">Aug</option>
                            <option value="sep">Sep</option>
                            <option value="oct">Oct</option>
                            <option value="nov">Nov</option>
                            <option value="dec">Dec</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div style="float:right;">
                <label id="lbl-cost-info2" style="font-size: 10pt; font-weight: bold;"></label>
            </div>
            <br />
            <div style="float:right;">
                @*<label id="lbl-filter-info">Filter results: All</label>*@
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-md-12">
            <div style="float:right;">
                <span>
                    <input class="btn btn-lu-red" type="submit" id="btn-clear-filter2" style="font-size: 10pt;" value="Clear" />
                </span>
                <span>
                    <input class="btn btn-lu-green" type="submit" id="btn-submit-filter2" style="font-size: 10pt;" value="Submit" />
                </span>
                <span id="btn-submit-export2">
                    @Html.ActionLink("Export to PDF", "ExportRptDepartmentUsage", "StoreReports", null, new { @class = "btn btn-lu-blue", @id = "btn-export-pdf2", style = "font-size: 10pt; color:#f4f4f4;" })
                </span>
            </div>
        </div>
    </div>

    <hr />

    <table id="dataTable-deptUsage" class="table">

        <thead style="font-size: 10pt;">
            <tr>
                <th>Dept Name</th>
                <th>Year</th>
                <th>Month</th>
                <th>Category</th>
                <th>Item Code</th>
                <th>Description</th>
                <th>Date</th>
                <th>Unit of Measure</th>
                <th>Quantity</th>
                <th>Avg Unit Cost ($)</th>
                <th>Total Cost ($)</th>
            </tr>
        </thead>
        <tbody style="font-size: 10pt;"></tbody>
    </table>

    <div id="dialog-invalid-report-date" class="hidden" @*title="Invalid report date filter"*@>
        <br />
        <div style="text-align:center;">
            <h5>Please select at least 1 valid month and year.</h5>
        </div>

        <span>
            <button class="btn btn-lu-blue" id="btn-dialog-invalid-date-ok" style="margin-left:40%">ok</button>
        </span>
        <hr />
    </div>

    <div id="dialog-no-data" class="hidden" @*title="Information"*@>
        <br />
        <div style="text-align:center;">
            <h5>No data found.</h5>
        </div>
        <span>
            <button class="btn btn-lu-blue" id="btn-dialog-no-data-ok" style="margin-left:40%;">ok</button>
        </span>
        <hr />
    </div>
</div>

<script>
    var table;
    var initialSum;

    $(document).ready(function () {
        $('#btn-submit-export2').hide();

        $.ajax({
            url: 'http://localhost:49921/api/Restful/GetRptDepartmentUsage',
            method: 'get',
            dataType: 'json',
            success: function (data) {
                d = data;

                table = $('#dataTable-deptUsage').DataTable({
                    paging: true,
                    sort: true,
                    search: false,
                    dom: 'lrtip',
                    "iDisplayLength": 5,
                    data: data,
                    columns: [
                        { 'data': 'DepartmentName' },
                        { 'data': 'Year' },
                        { 'data': 'Month' },
                        { 'data': 'CategoryName' },
                        { 'data': 'ItemCode' },
                        { 'data': 'Description' },
                        {
                            'data': 'Date',
                            'render': function (jsonDate) {
                                const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
                                ];

                                var date = new Date(jsonDate.substr(0));
                                var month = date.getMonth();
                                return date.getDate() + " " + monthNames[month] + " " + date.getFullYear();
                            }
                        },
                        { 'data': 'UoM' },
                        { 'data': 'QuantityReceived' },
                        {
                            'data': 'AvgUnitCost',
                            'render': function (data, type, row) {
                                return parseFloat(Math.round(data * 100) / 100).toFixed(2);;
                            }
                        },
                        {
                            'data': 'TotalCost',
                            'render': function (data, type, row) {
                                return parseFloat(Math.round(data * 100) / 100).toFixed(2);;
                            }
                        }
                    ],
                    //"initComplete": function (settings, json) {
                    //    //reset datatable results

                    //    initialSum = 0;
                    //    for (var i = 0; i < table.rows().data().length; i++) {
                    //        var rowData = data[i].TotalCost;
                    //        initialSum += rowData;
                    //    }

                    //    initialSum = parseFloat(initialSum).toFixed(2);
                    //    $("#lbl-cost-info2").text("Total cost ($): " + initialSum);
                    //},
                    drawCallback: function (settings) {

                        $('#btn-submit-filter2').on('click', function () {
                            var selYears = [];
                            var selMonths = [];
                            var search = [];

                            $('#chosenYear option:selected').each(function () {
                                selYears.push($(this).val());
                            });

                            $('#chosenMonths option:selected').each(function () {
                                selMonths.push($(this).val());
                            });

                            if (selMonths.length == 0 || selYears.length == 0) {
                                $('#dialog-invalid-report-date').dialog('open');
                                return;
                            }

                            selYears.forEach(function (element, index1) {
                                selMonths.forEach(function (element, index2) {
                                    var monthYear = selMonths[index2] + " " + selYears[index1];
                                    search.push(monthYear);
                                });
                            });

                            search = search.join('|');

                            table
                                .columns(6)
                                .search(search, true, false, true).draw();

                            var dept = $('#SelectDepartmentDesc :selected').text();
                            var category = $('#SelectCategory :selected').text();

                            table
                                .columns(0)
                                .search(dept, true, false, true).draw();

                            if (category != "All") {
                                table
                                    .columns(3)
                                    .search(category, true, false, true).draw();
                            }

                            if (table.rows({ filter: 'applied' }).data().length == 0) {
                                $('#dialog-no-data').dialog('open');
                                $('#btn-submit-export2').hide();

                                table
                                    .search('')
                                    .columns().search('')
                                    .draw();

                                //$("#lbl-cost-info2").text("Total cost ($): " + initialSum);

                                return;
                            }

                            var arr = [];
                            var data = table.rows({ filter: 'applied' }).data();

                            for (var i = 0; i < table.rows({ filter: 'applied' }).data().length; i++) {
                                var rowData = data[i];

                                arr.push(JSON.stringify(rowData));
                            }

                            $.ajax({
                                url: '/StoreReports/ExportRptDepartmentUsage2',
                                data: JSON.stringify({ arr: arr }),
                                dataType: "json",
                                contentType: 'application/json; charset=utf-8',
                                type: 'POST',
                                async: false
                            });

                            table.draw(false);
                            $('#btn-submit-export2').show();

                            var sum = 0;
                            for (var i = 0; i < table.rows({ filter: 'applied' }).data().length; i++) {
                                var rowData = data[i].TotalCost;
                                sum += rowData;
                            }

                            sum = parseFloat(sum).toFixed(2);

                            $("#lbl-cost-info2").text("Total cost ($): " + addCommas(sum));
                            $("#lbl-filter-info").text("Filter results: " + dept + " , " + search + " , " + category);

                        });

                    },
                    columnDefs: [
                        {
                            "targets": [0, 1, 2],
                            "visible": false,
                        }
                    ]

                });
            }
        });
    });

    $('#btn-export-pdf2').on('click', function () {
        $('#btn-submit-export2').hide();
    });

    $('#btn-clear-filter2').on('click', function () {
        $('#btn-submit-export2').hide();

        $("#chosenMonths").val([]);
        $("#chosenYear").val([]);

        $("#lbl-filter-info").text("Filter results: All");

        //reset datatable results
        table
            .search('')
            .columns().search('')
            .draw();
        $("#lbl-cost-info2").hide();
        //$("#lbl-cost-info2").text("Total cost ($): " + initialSum);
        $("#SelectCategory").val("All");

    });

    $("#SelectDepartmentDesc").change(function () {
        $('#btn-submit-export2').hide();

        $("#chosenMonths").val([]);
        $("#chosenYear").val([]);

        $("#lbl-filter-info").text("Filter results: All");

    });

    $("#SelectCategory").change(function () {
        $('#btn-submit-export2').hide();

        $("#chosenMonths").val([]);
        $("#chosenYear").val([]);

        $("#lbl-filter-info").text("Filter results: All");

    });

    $(function () {
        $("#dialog-invalid-report-date").dialog({
            autoOpen: false,
        });
    });

    $(function () {
        $("#dialog-no-data").dialog({
            autoOpen: false
        });
    });

    $("#dialog-no-data").on("dialogclose", function (event, ui) {
        $('#parent_page').css({ 'opacity': 1, 'pointer-events': 'auto' });
    });

    $('#btn-dialog-no-data-ok').on('click', function () {
        $('#dialog-no-data').dialog('close');
    });

    $("#dialog-invalid-report-date").on("dialogclose", function (event, ui) {
        $('#parent_page').css({ 'opacity': 1, 'pointer-events': 'auto' });
    });

    $('#btn-dialog-invalid-date-ok').on('click', function () {
        $('#dialog-invalid-report-date').dialog('close');
    });
    //Function to format numbers with comma after every thousandth digit
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

</script>
