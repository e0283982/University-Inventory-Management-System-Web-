@using SA46Team1_Web_ADProj.Models;
@model POFullDetail

@{
    Layout = null;
    List<POFullDetail> poFullDetailList = (List<POFullDetail>)Session["POItems"];
}

<link href="@Url.Content("~/Content/common.css")" rel="stylesheet" type="text/css" />


<script>
    var table;
    $(document).ready(function () {
        table = $('#dataTable-displayPO').DataTable({
            paging: true,
            sort: true,
            scrollY: 200,
            "iDisplayLength": 5,
            scrollCollapse: false
        });

        $.ajax({
            url: 'http://localhost:49921/api/Restful/GetPOFullDetails/' + $('#lbl-poNumber').text(),
            type: 'get',
            dataType: 'json',
            success: function (data) {
                // Parsing Date into readable format
                var date = new Date(data[0]["Date"]);
                var month = date.getMonth() + 1;
                var newDate = date.getDate() + "/" + month + "/" + date.getFullYear();

                var newDateRec;
                if (data[0]["ReceivedDate"] == null) {
                    newDateRec = "-";
                } else {
                    var dateRec = new Date(data[0]["ReceivedDate"]);
                    var monthRec = dateRec.getMonth() + 1;
                    newDateRec = dateRec.getDate() + "/" + monthRec + "/" + dateRec.getFullYear();
                }

                // Calculation of GST / Total PO price
                var i;
                var itemTotal = 0;
                var total = 0;
                for (i = 0; i < data.length; i++) {
                    itemTotal = data[0]["UnitCost"] * data[0]["QuantityOrdered"];
                    total = total + data[i]["UnitCost"] * data[i]["QuantityOrdered"];
                }
                var gst = total * 0.07;
                var netTotal = total + gst;

                // Displaying JSON onto labals
                $(function () {
                    $('#lbl-poNumber').val(data[0]["PONumber"]);
                    $('#ta-remarks').val(data[0]["Remarks"]);
                    $('#lbl-total').val(twoDP(itemTotal));

                    $("#lbl-supplier").append(data[0]["CompanyName"]);
                    $("#lbl-dateCreated").append(newDate);
                    $("#lbl-del-date").append(newDateRec);
                    $("#lbl-status").append(data[0]["Status"]);
                    $("#displayPO-gross-total").append(twoDP(total));
                    $("#displayPO-net-total").append(twoDP(netTotal));
                    $("#displayPO-gst").append(twoDP(gst));
                });


            }
        });

        var inputs = document.getElementsByTagName("label");
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].id === 'lbl-unit-cost') {
                inputs[i].disabled = false;
            }
        }

    });

    // Format into 2 DP
    function twoDP(value) {
        return parseFloat(Math.round(value * 100) / 100).toFixed(2);
    }

    // Save PO Dialog
    $(function () {
        $("#dialog-save-displayPO").dialog({
            autoOpen: false
        });
    });

    // Save PO Button
    $('#btn-save-displayPO').click(function () {

        var arrQty = [];
        for (var i = 0; i < table.rows().data().length; i++) {
            arrQty.push(table.cell(i, 2).nodes().to$().find('input').val());
        }

        $.ajax({
            url: '/StorePurchase/SaveEdit',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({ arrQty: arrQty })
        });

        window.location.href = '@Url.Action("Purchase", "Store")';
        return false;
    });

    // Edit PO Dialog
    $(function () {
        $("#dialog-edit-displayPO").dialog({
            autoOpen: false
        });
    });

    // Edit PO Button
    $('#btn-edit-displayPO').click(function () {
        //$('#dialog-edit-displayPO').dialog('open');
        $('#btn-save-displayPO').show();
        $('#btn-edit-displayPO').hide();
        $('#btn-cancelPO').hide();
        $('#input-qty-ordered').prop('disabled', false);
        $('#input-qty-delivered').prop('disabled', true);

        $('#btn-GR-displayPO').hide();
        $('#btn-edit-GR').hide();
        $('#btn-cancel-displayPO').show();

        var inputs = document.getElementsByTagName("INPUT");

        for (var i = 0; i < table.rows().data().length; i++) {
            table.cell(i, 2).nodes().to$().find('input').prop('disabled', false);
        }

        //var inputs = document.getElementsByTagName("INPUT");
        //for (var i = 0; i < inputs.length; i++) {
        //    if (inputs[i].id === 'input-qty-ordered') {
        //        inputs[i].disabled = false;
        //    }
        //}

        table.draw(false);
        @*window.location.href = '@Url.Action("Purchase", "Store")';*@

        return true;
    });

    // Goods Receipt Dialog
    $(function () {
        $("#dialog-GR-displayPO").dialog({
            autoOpen: false
        });
    });

    // Goods Receipt Button
    $('#btn-GR-displayPO').click(function () {

        var arrQty = [];
        for (var i = 0; i < table.rows().data().length; i++) {
            arrQty.push(table.cell(i, 3).nodes().to$().find('input').val());
        }

        $.ajax({
            url: '/StorePurchase/GoodsReceipt',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({ arrQty: arrQty })
        });

        window.location.href = '@Url.Action("Purchase", "Store")';
        return false;
    });


    // Cancel PO Dialog
    $(function () {
        $("#dialog-cancelPO").dialog({
            autoOpen: false
        });
    });

    // Cancel PO Button
    $('#btn-cancelPO').click(function () {
        //$('#dialog-cancelPO').dialog('open');

        $.ajax({
            url: '/StorePurchase/CancelPO',
            type: 'POST'
        });
        window.location.href = '@Url.Action("Purchase", "Store")';
        return false;
    });

    // Cancel Edit Dialog
    $(function () {
        $("#dialog-cancel-displayPO").dialog({
            autoOpen: false
        });
    });

    // Cancel Edit Button
    $('#btn-cancel-displayPO').click(function () {
        jQuery.ajax({
            url: '/StorePurchase/ExitEditMode',
            type: 'POST'
        })
            window.location.href = '@Url.Action("Purchase", "Store")';
    });

       // Edit GR Dialog
    $(function () {
        $("#dialog-edit-GR").dialog({
            autoOpen: false
        });
    });

    // Edit GR Button
    $('#btn-edit-GR').click(function () {

        $('#btn-GR-displayPO').show();
        $('#btn-edit-GR').hide();
        $('#btn-cancelPO').hide();
        $('#input-qty-delivered').prop('disabled', false);
        $('#input-qty-ordered').prop('disabled', true);
        $('#btn-save-displayPO').hide();
        $('#btn-edit-displayPO').hide();
        $('#btn-cancel-displayPO').show();

        var inputs = document.getElementsByTagName("INPUT");

        for (var i = 0; i < table.rows().data().length; i++) {
            table.cell(i, 3).nodes().to$().find('input').prop('disabled', false);
        }

        //for (var i = 0; i < inputs.length; i++) {
        //    if (inputs[i].id === 'input-qty-delivered') {
        //        inputs[i].disabled = false;
        //    }
        //}
        table.draw(false);
        return false;
    });

    $('#dataTable-displayPO tbody').on('change', '#input-qty-ordered', function () {
        var data = table.row($(this).parents('tr')).data();
        var index = table.row($(this).parents('tr')).index();

        var qty = table.cell(index, 2).nodes().to$().find('input').val();
        var unitCost = table.cell(index, 5).nodes().to$().find('#lbl-unit-cost').text();

        var newTotal = qty * unitCost;
        table.cell(index, 6).nodes().to$().find('#lbl-total-cost').text(twoDP(newTotal));

        var total = 0
        for (var i = 0; i < table.data().length; i++) {
            var number = table.cell(i, 6).nodes().to$().find('#lbl-total-cost').text();
            total += parseFloat(number);
        }

        var gst = total * 0.07;
        var netTotal = total * 1.07;
        $("#displayPO-gross-total").text(twoDP(total));
        $("#displayPO-net-total").text(twoDP(netTotal));
        $("#displayPO-gst").text(twoDP(gst));

        table.draw(false);
    });
    //$('#dataTable-displayPO tbody').on('change', '#input-qty-delivered', function () {
        
    //    table.draw(false);
    //});

</script>

<div class="row">
    <div class="col-md-6">
        <div>
            <h5>Display/Edit Purchase Order</h5>
        </div>
        <div>
            <label style="font-size: 10pt;">PO Number:&nbsp <label id="lbl-poNumber" style="font-size: 10pt;">@Session["poNumber"]</label></label>
        </div>
        <div>
            <label style="font-size: 10pt;">Supplier:&nbsp;</label><label id="lbl-supplier" style="font-size: 10pt;" />
        </div>
        <div>
            <label style="font-size: 10pt;">Date Created: &nbsp;</label><label id="lbl-dateCreated" style="font-size: 10pt;" />
        </div>
        @*<div>
            <label style="font-size: 10pt;">Delivery Date:&nbsp;</label><label id="lbl-del-date" style="font-size: 10pt;" />
        </div>*@
    </div>
    <div class="col-md-6">
        <div style="float: right;">
            <div>
                <p>Remarks:</p>
                <textarea id="ta-remarks" rows="3" cols="50"></textarea>
            </div>
        </div>
    </div>
</div>
<div id="datatableDisplayPO">
<table id="dataTable-displayPO" class="display" style="width:80%;">
    <thead style="font-size: 10pt;">
        <tr>
            <th>Item Code</th>
            <th>Item Description</th>
            <th>Quantity Ordered</th>
            <th>Quantity Delivered</th>
            <th>Unit of Measure</th>
            <th>Unit Price ($)</th>
            <th>Total ($)</th>
            <th>GST ($)</th>
        </tr>
    </thead>
    @foreach (var item in poFullDetailList)
    {
    <tr style="font-size: 10pt;">
        <th style="font-size: 10pt;">@item.ItemCode</th>
        <th style="font-size: 10pt;">@item.Description</th>
        <th style="font-size: 10pt;">
             <input id="input-qty-ordered" class="inputEditOrd" type="number" value="@item.QuantityOrdered" disabled/>
        </th>
        <th style="font-size: 10pt;">
            <input id="input-qty-delivered" class="inputEditDel" type="number" value="@item.QuantityDelivered" disabled />
        </th>

        <th style="font-size: 10pt;">@item.UoM</th>
        <th style="font-size: 10pt;"><label id="lbl-unit-cost" class="lbl-unit-cost">@item.UnitCost.ToString("0.00")</label></th>
        <th style="font-size: 10pt;"><label id="lbl-total-cost">@((item.UnitCost * item.QuantityOrdered).ToString("0.00"))</label></th>
        <th style="font-size: 10pt;">7%</th>
    </tr>
    }
</table>
</div>
<br />
<div>
    <label style="font-size: 12pt;">Gross Total ($):&nbsp;</label><strong><label id="displayPO-gross-total" style="font-size: 12pt;" /></strong>
    <label style="font-size: 12pt;">&nbsp;GST ($):&nbsp;</label><strong><label id="displayPO-gst" style="font-size: 12pt;" /></strong>
    <label style="font-size: 12pt;">&nbsp;Net Total ($):&nbsp;</label><strong><label id="displayPO-net-total" style="font-size: 12pt;" /></strong>
    <label style="font-size: 12pt;">&nbsp;PO Status:&nbsp;</label><strong><label id="lbl-status" style="font-size: 12pt;" /></strong>
</div>

<div class="row">
    <div class="col-md-11">
        <div style="float:right;">

            @if (Session["poStatus"].ToString() == "Open")
            {
                <button class="btn btn-lu-blue" id="btn-edit-displayPO" style="font-size: 10pt;">Edit</button>
                <button class="btn btn-lu-red" id="btn-cancelPO" style="font-size: 10pt;">Cancel PO</button>
            }
            else
            {
                <button class="btn btn-lu-blue" id="btn-edit-displayPO" style="font-size: 10pt;" disabled>Edit</button>
            }
            <div id="dialog-edit-displayPO" class="hidden" title="Basic dialog">
                <p>Should change color if Goods Receipt / status is completed</p>
            </div>

            <button class="hidden btn btn-lu-green" id="btn-save-displayPO" style="font-size: 10pt;">Save</button>
            <div id="dialog-save-displayPO" class="hidden" title="Basic dialog">
                <p>Changes to PO - can only be seen / used if PO is 'open'</p>
            </div>

            @if (Session["poStatus"].ToString() == "Outstanding" || Session["poStatus"].ToString() == "Open")
            {
                <button class="btn btn-lu-blue" id="btn-edit-GR" style="font-size: 10pt;">Goods Receipt</button>
                <button class="hidden btn btn-lu-green" id="btn-GR-displayPO" style="font-size: 10pt;">Submit Goods Receipt</button>
            }

            <button type="reset" class="hidden btn btn-lu-red" id="btn-cancel-displayPO" style="font-size: 10pt;">Cancel</button>
            <div id="dialog-cancel-displayPO" class="hidden" title="Basic dialog">
                <p>Cancel Edit Mode of PO- can only be seen / used if PO is 'open'</p>
            </div>





            <div id="dialog-edit-GR" class="hidden" title="Basic dialog">
                <p>Prep GR</p>
            </div>

            <div id="dialog-GR-displayPO" class="hidden" title="Basic dialog">
                <p>Goods receipt btn.</p>
            </div>
        </div>
    </div>
    <div class="col-md-1">
        <div id="details-back-btn">

            @using (Html.BeginForm("BackToPOList", "StorePurchase", FormMethod.Post))
            {
                <input class="btn btn-lu-blue" type="submit" value="Back" style="font-size: 10pt;" />
            }
        </div>
    </div>
</div>